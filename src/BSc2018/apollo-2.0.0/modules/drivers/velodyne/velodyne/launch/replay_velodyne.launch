<launch>
    <arg name="velodyne16_calibration_online" default="true" />
    <!--If 'velodyne16_calibration_online' is true, 'velodyne16_calibration_file' will not use  -->
    <arg name="param_folder" default="$(find velodyne_pointcloud)/params"/>
    <arg name="velodyne16_calibration_file" default="$(arg param_folder)/64E_S3_calibration_example.yaml"/>
    <arg name="extrinsics_velodyne16" default="$(arg param_folder)/velodyne16_novatel_extrinsics_example.yaml"/>
    <arg name="organized" default="false"/>
    <arg name="min_range" default="0.9" />
    <arg name="max_range_64" default="70.0" />
    <arg name="rpm" default="600"/>
    <arg name="tf_query_timeout" default="0.1"/>
    <arg name="velodyne16_frame_id" default="velodyne16"/>

    <!-- start rosbag replay -->
  <include file="$(find velodyne_pointcloud)/launch/rosbag_replay.launch">
    <arg name="rate" default="1" />
    <arg name="start" default="0" />
    <arg name="bag" value="" />
  </include> 

  <include file="$(find velodyne_pointcloud)/launch/nodelet_manager.launch">
  </include>
    <!--  HDL64E -->  
  <!-- start cloud nodelet using test calibration file -->
  <include file="$(find velodyne_pointcloud)/launch/convert_nodelet.launch">
    <arg name="model" default="64E_S3D_STRONGEST" />
    <arg name="calibration_online" value="$(arg velodyne16_calibration_online)" />
    <arg name="calibration" default="$(arg velodyne16_calibration_file)" />
    <arg name="organized" default="$(arg organized)"/>
    <arg name="min_range" default="$(arg min_range)" />
    <arg name="max_range" default="$(arg max_range_64)" />
    <arg name="topic_pointcloud" default="/apollo/sensor/velodyne16/PointCloud2"/>
    <arg name="topic_packets" default="/apollo/sensor/velodyne16/VelodyneScanUnified"/>
    <arg name="node_name" value="sensor_velodyne16_convert"/>
  </include>

   <!-- start 64 compensator nodelet -->
  <include file="$(find velodyne_pointcloud)/launch/compensator_nodelet.launch">
    <arg name="node_name" value="sensor_velodyne16_compensator"/>
    <arg name="child_frame_id" value="$(arg velodyne16_frame_id)"/>
    <arg name="tf_query_timeout" value="$(arg tf_query_timeout)"/>
    <arg name="topic_pointcloud" value="/apollo/sensor/velodyne16/PointCloud2"/>
    <arg name="topic_compensated_pointcloud" value="/apollo/sensor/velodyne16/compensator/PointCloud2"/>
  </include>

  <node pkg="velodyne_pointcloud" type="extrinsics_broadcaster.py"
    args="$(arg extrinsics_velodyne16)" name="static_transform_velodyne16" />
  
  <node pkg="nodelet" type="nodelet" name="tf_broadcaster_nodelet"
        args="load gnss_driver/TFBroadcasterNodelet velodyne_nodelet_manager" output="screen">
  </node>

</launch>
